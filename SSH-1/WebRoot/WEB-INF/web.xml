<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
	<!-- Spring的OpenSessionInView实现 -->  
	<filter>  
    	<filter-name>openSessionInViewFilter</filter-name>  
   		<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>  
    <!-- singleSession默认为true,若设为false则等于没用OpenSessionInView 。所以默认可以不写-->  
	    <init-param>  
	    	<param-name>singleSession</param-name>  
	    	<param-value>true</param-value>   
	    </init-param>   
	<!--   
		指定org.springframework.orm.hibernate3.LocalSessionFactoryBean在spring配置文件中的名称,默认值为sessionFactory。 如果LocalSessionFactoryBean在spring中的名称不是sessionFactory,该参数一定要指定,否则会出现找不到sessionFactory的例外。所以默认可以不写  
	-->  
		<init-param>  
			<param-name>sessionFactoryBean</param-name>  
			<param-value>sessionFactory</param-value>  
		</init-param>   
	</filter>  
	<filter-mapping>  
		<filter-name>openSessionInViewFilter</filter-name>  
	    <url-pattern>/*</url-pattern>
	</filter-mapping>  
	
	
	<!-- shiro过滤器: 实现认证和权限验证. -->
	<filter>
			<filter-name>shiroFilter</filter-name>
			<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
		</filter>
		<filter-mapping>
			<filter-name>shiroFilter</filter-name>
			<url-pattern>/*</url-pattern>
		</filter-mapping> 

	<!-- struts核心通过过滤器实现所有用户请求的拦截处理: -->
	<filter>
		<filter-name>strutsFilter</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>strutsFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 提供spring容器的监听器: 随着项目的启动部署,加载spring容器. -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext-*.xml</param-value>
	</context-param>

</web-app>